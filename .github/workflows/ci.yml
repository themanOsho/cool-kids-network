name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          tools: php-cs-fixer, phpcs, phpcbf

      - name: Allow Composer Plugins
        run: composer global config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true

      - name: Install WordPress Coding Standards (WPCS)
        run: |
          composer global require squizlabs/php_codesniffer wp-coding-standards/wpcs phpcsstandards/phpcsutils phpcsstandards/phpcsextra --no-interaction --prefer-dist
          phpcs --config-set installed_paths "$HOME/.composer/vendor/wp-coding-standards/wpcs,$HOME/.composer/vendor/phpcsstandards/phpcsutils,$HOME/.composer/vendor/phpcsstandards/phpcsextra"
          phpcs -i  # Verify installation

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Run PHPCS (Strict Mode)
        run: |
          export PATH="$HOME/.composer/vendor/bin:$PATH"
          phpcs --standard=WordPress --ignore=vendor,includes/class-coolkidsnetwork.php .

      - name: Auto-fix PHPCS issues
        run: |
          export PATH="$HOME/.composer/vendor/bin:$PATH"
          phpcbf --standard=WordPress --ignore=vendor,includes/class-coolkidsnetwork.php . || true

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 3306:3306

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"

      - name: Install Dependencies
        run: composer install

      - name: Install WP-CLI
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          sudo mv wp-cli.phar /usr/local/bin/wp

      - name: Install WordPress Fix installation path
        run: |
          mkdir -p /home/runner/work/cool-kids-network/cool-kids-network/wordpress
          cd /home/runner/work/cool-kids-network/cool-kids-network/wordpress
          
          wp core download --allow-root
          wp config create --dbname=wordpress_test --dbuser=wordpress --dbpass=wordpress --dbhost=127.0.0.1 --allow-root

          # Fix: Drop database if it already exists before creating a new one.
          wp db query "DROP DATABASE IF EXISTS wordpress_test;" --allow-root || true
          wp db create --allow-root

          wp core install --url=localhost --title="Test Site" --admin_user=admin --admin_password=admin --admin_email=test@example.com --allow-root
          
          echo "✅ WordPress Installed Successfully!"

      - name: Verify WordPress Installation Debugging
        run: |
          echo "✅ Checking WordPress files in project directory..."
          ls -R /home/runner/work/cool-kids-network/cool-kids-network/wordpress || true
          
          if [ ! -f "/home/runner/work/cool-kids-network/cool-kids-network/wordpress/wp-load.php" ]; then
            echo "❌ Error: wp-load.php not found!"
            exit 1
          else
            echo "✅ WordPress wp-load.php found!"
          fi

      - name: Run Tests
        run: |
          chmod +x vendor/bin/phpunit  # Fix: Grant execute permission
          
          # Debugging Step: Show Current Directory Structure
          echo "Listing files to verify WordPress installation:"
          ls -R /home/runner/work/cool-kids-network/cool-kids-network || true

          # Ensure ABSPATH is set correctly
          export ABSPATH="/home/runner/work/cool-kids-network/cool-kids-network/wordpress/"
          echo "ABSPATH set to: $ABSPATH"

          # Verify wp-load.php exists
          if [ ! -f "$ABSPATH/wp-load.php" ]; then
            echo "❌ Error: wp-load.php not found in $ABSPATH"
            exit 1
          fi

          # Run Tests
          vendor/bin/phpunit --testdox
